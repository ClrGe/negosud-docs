/**
 * API_NEGOSUD.yamlLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import {
  ApiRoleAddRoleRequest,
  apiRoleAddRoleRequestSchema,
} from '../models/apiRoleAddRoleRequest';
import {
  ApiRoleDeleteRoleRequest,
  apiRoleDeleteRoleRequestSchema,
} from '../models/apiRoleDeleteRoleRequest';
import {
  ApiRoleUpdateRoleRequest,
  apiRoleUpdateRoleRequestSchema,
} from '../models/apiRoleUpdateRoleRequest';
import { unknown } from '../schema';
import { BaseController } from './baseController';

export class RoleController extends BaseController {
  /**
   * @return Response from the API call
   */
  async apiRoleId(
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest('GET', '/Role/3691');
    return req.callAsJson(unknown(), requestOptions);
  }

  /**
   * @return Response from the API call
   */
  async apiRole(
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest('GET', '/Role');
    return req.callAsJson(unknown(), requestOptions);
  }

  /**
   * @param body
   * @return Response from the API call
   */
  async apiRoleUpdateRole(
    body: ApiRoleUpdateRoleRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest('POST', '/Role/UpdateRole');
    const mapped = req.prepareArgs({
      body: [body, apiRoleUpdateRoleRequestSchema],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    return req.callAsJson(unknown(), requestOptions);
  }

  /**
   * @param body
   * @return Response from the API call
   */
  async apiRoleAddRole(
    body: ApiRoleAddRoleRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest('POST', '/Role/AddRole');
    const mapped = req.prepareArgs({
      body: [body, apiRoleAddRoleRequestSchema],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    return req.callAsJson(unknown(), requestOptions);
  }

  /**
   * @param body
   * @return Response from the API call
   */
  async apiRoleDeleteRole(
    body: ApiRoleDeleteRoleRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest('POST', '/Role/DeleteRole');
    const mapped = req.prepareArgs({
      body: [body, apiRoleDeleteRoleRequestSchema],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    return req.callAsJson(unknown(), requestOptions);
  }
}
