/**
 * API_NEGOSUD.yamlLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import { string, unknown } from '../schema';
import { BaseController } from './baseController';

export class SupplierOrderController extends BaseController {
  /**
   * @param body
   * @return Response from the API call
   */
  async apiSupplierOrderAddSupplierOrder(
    body: string,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest('POST', '/SupplierOrder/AddSupplierOrder');
    const mapped = req.prepareArgs({ body: [body, string()] });
    req.header('Content-Type', 'application/json');
    req.text(mapped.body);
    return req.callAsJson(unknown(), requestOptions);
  }

  /**
   * @param body
   * @return Response from the API call
   */
  async apiSupplierOrderUpdateSupplierOrder(
    body: string,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest(
      'POST',
      '/SupplierOrder/UpdateSupplierOrder'
    );
    const mapped = req.prepareArgs({ body: [body, string()] });
    req.header('Content-Type', 'application/json');
    req.text(mapped.body);
    return req.callAsJson(unknown(), requestOptions);
  }

  /**
   * @return Response from the API call
   */
  async apiSupplierOrder(
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest('GET', '/SupplierOrder');
    return req.callAsJson(unknown(), requestOptions);
  }

  /**
   * @return Response from the API call
   */
  async apiSupplierOrderId(
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest('GET', '/SupplierOrder/3691');
    return req.callAsJson(unknown(), requestOptions);
  }

  /**
   * @return Response from the API call
   */
  async apiSupplierOrderDeleteSupplierOrder(
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest(
      'POST',
      '/SupplierOrder/DeleteSupplierOrder'
    );
    return req.callAsJson(unknown(), requestOptions);
  }
}
