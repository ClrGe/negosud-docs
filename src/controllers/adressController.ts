/**
 * API_NEGOSUD.yamlLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import {
  ApiAddressAddAddressRequest,
  apiAddressAddAddressRequestSchema,
} from '../models/apiAddressAddAddressRequest';
import {
  ApiAddressDeleteAddressRequest,
  apiAddressDeleteAddressRequestSchema,
} from '../models/apiAddressDeleteAddressRequest';
import {
  ApiAddressUpdateAddressRequest,
  apiAddressUpdateAddressRequestSchema,
} from '../models/apiAddressUpdateAddressRequest';
import { unknown } from '../schema';
import { BaseController } from './baseController';

export class AdressController extends BaseController {
  /**
   * @return Response from the API call
   */
  async apiAddressId(
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest('GET', '/Address/3691');
    return req.callAsJson(unknown(), requestOptions);
  }

  /**
   * @return Response from the API call
   */
  async apiAddress(
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest('GET', '/Address');
    return req.callAsJson(unknown(), requestOptions);
  }

  /**
   * @param body
   * @return Response from the API call
   */
  async apiAddressAddAddress(
    body: ApiAddressAddAddressRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest('POST', '/Address/AddAddress');
    const mapped = req.prepareArgs({
      body: [body, apiAddressAddAddressRequestSchema],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    return req.callAsJson(unknown(), requestOptions);
  }

  /**
   * @param body
   * @return Response from the API call
   */
  async apiAddressUpdateAddress(
    body: ApiAddressUpdateAddressRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest('POST', '/Address/UpdateAddress');
    const mapped = req.prepareArgs({
      body: [body, apiAddressUpdateAddressRequestSchema],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    return req.callAsJson(unknown(), requestOptions);
  }

  /**
   * @param body
   * @return Response from the API call
   */
  async apiAddressDeleteAddress(
    body: ApiAddressDeleteAddressRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest('POST', '/Address/DeleteAddress');
    const mapped = req.prepareArgs({
      body: [body, apiAddressDeleteAddressRequestSchema],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    return req.callAsJson(unknown(), requestOptions);
  }
}
