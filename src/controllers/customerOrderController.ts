/**
 * API_NEGOSUD.yamlLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import {
  ApiCustomerOrderAddCustomerOrderRequest,
  apiCustomerOrderAddCustomerOrderRequestSchema,
} from '../models/apiCustomerOrderAddCustomerOrderRequest';
import {
  ApiCustomerOrderDeleteCustomerOrderRequest,
  apiCustomerOrderDeleteCustomerOrderRequestSchema,
} from '../models/apiCustomerOrderDeleteCustomerOrderRequest';
import {
  ApiCustomerOrderUpdateCustomerOrderRequest,
  apiCustomerOrderUpdateCustomerOrderRequestSchema,
} from '../models/apiCustomerOrderUpdateCustomerOrderRequest';
import { array, unknown } from '../schema';
import { BaseController } from './baseController';

export class CustomerOrderController extends BaseController {
  /**
   * @return Response from the API call
   */
  async apiCustomerOrderId(
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest('GET', '/CustomerOrder/3691');
    return req.callAsJson(unknown(), requestOptions);
  }

  /**
   * @return Response from the API call
   */
  async apiCustomerOrder(
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest('GET', '/CustomerOrder');
    return req.callAsJson(unknown(), requestOptions);
  }

  /**
   * @param body
   * @return Response from the API call
   */
  async apiCustomerOrderUpdateCustomerOrder(
    body: ApiCustomerOrderUpdateCustomerOrderRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest(
      'POST',
      '/CustomerOrder/UpdateCustomerOrder'
    );
    const mapped = req.prepareArgs({
      body: [body, apiCustomerOrderUpdateCustomerOrderRequestSchema],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    return req.callAsJson(unknown(), requestOptions);
  }

  /**
   * @param body
   * @return Response from the API call
   */
  async apiCustomerOrderAddCustomerOrder(
    body: ApiCustomerOrderAddCustomerOrderRequest[],
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest('POST', '/CustomerOrder/AddCustomerOrder');
    const mapped = req.prepareArgs({
      body: [body, array(apiCustomerOrderAddCustomerOrderRequestSchema)],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    return req.callAsJson(unknown(), requestOptions);
  }

  /**
   * @param body
   * @return Response from the API call
   */
  async apiCustomerOrderDeleteCustomerOrder(
    body: ApiCustomerOrderDeleteCustomerOrderRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest(
      'POST',
      '/CustomerOrder/DeleteCustomerOrder'
    );
    const mapped = req.prepareArgs({
      body: [body, apiCustomerOrderDeleteCustomerOrderRequestSchema],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    return req.callAsJson(unknown(), requestOptions);
  }
}
