/**
 * API_NEGOSUD.yamlLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import {
  ApiProducerAddProducerRequest,
  apiProducerAddProducerRequestSchema,
} from '../models/apiProducerAddProducerRequest';
import {
  ApiProducerDeleteProducerRequest,
  apiProducerDeleteProducerRequestSchema,
} from '../models/apiProducerDeleteProducerRequest';
import {
  ApiProducerUpdateProducerRequest,
  apiProducerUpdateProducerRequestSchema,
} from '../models/apiProducerUpdateProducerRequest';
import { string, unknown } from '../schema';
import { BaseController } from './baseController';

export class ProducerController extends BaseController {
  /**
   * @param contentType  Example: application/json
   * @return Response from the API call
   */
  async apiProducer(
    contentType: string,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest('GET', '/Producer');
    const mapped = req.prepareArgs({ contentType: [contentType, string()] });
    req.header('Content-Type', mapped.contentType);
    return req.callAsJson(unknown(), requestOptions);
  }

  /**
   * @return Response from the API call
   */
  async apiProducerId(
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest('GET', '/Producer/3691');
    return req.callAsJson(unknown(), requestOptions);
  }

  /**
   * @param body
   * @return Response from the API call
   */
  async apiProducerAddProducer(
    body: ApiProducerAddProducerRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest('POST', '/Producer/AddProducer');
    const mapped = req.prepareArgs({
      body: [body, apiProducerAddProducerRequestSchema],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    return req.callAsJson(unknown(), requestOptions);
  }

  /**
   * @param body
   * @return Response from the API call
   */
  async apiProducerUpdateProducer(
    body: ApiProducerUpdateProducerRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest('POST', '/Producer/UpdateProducer');
    const mapped = req.prepareArgs({
      body: [body, apiProducerUpdateProducerRequestSchema],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    return req.callAsJson(unknown(), requestOptions);
  }

  /**
   * @param body
   * @return Response from the API call
   */
  async apiProducerDeleteProducer(
    body: ApiProducerDeleteProducerRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest('POST', '/Producer/DeleteProducer');
    const mapped = req.prepareArgs({
      body: [body, apiProducerDeleteProducerRequestSchema],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    return req.callAsJson(unknown(), requestOptions);
  }
}
