/**
 * API_NEGOSUD.yamlLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import {
  ApiCityAddCityRequest,
  apiCityAddCityRequestSchema,
} from '../models/apiCityAddCityRequest';
import {
  ApiCityDeleteCityRequest,
  apiCityDeleteCityRequestSchema,
} from '../models/apiCityDeleteCityRequest';
import {
  ApiCityUpdateCityRequest,
  apiCityUpdateCityRequestSchema,
} from '../models/apiCityUpdateCityRequest';
import { unknown } from '../schema';
import { BaseController } from './baseController';

export class CityController extends BaseController {
  /**
   * @return Response from the API call
   */
  async apiCityId(
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest('GET', '/City/1');
    return req.callAsJson(unknown(), requestOptions);
  }

  /**
   * @return Response from the API call
   */
  async apiCity(
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest('GET', '/City');
    return req.callAsJson(unknown(), requestOptions);
  }

  /**
   * @param body
   * @return Response from the API call
   */
  async apiCityAddCity(
    body: ApiCityAddCityRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest('POST', '/City/AddCity');
    const mapped = req.prepareArgs({
      body: [body, apiCityAddCityRequestSchema],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    return req.callAsJson(unknown(), requestOptions);
  }

  /**
   * @param body
   * @return Response from the API call
   */
  async apiCityUpdateCity(
    body: ApiCityUpdateCityRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest('POST', '/City/UpdateCity');
    const mapped = req.prepareArgs({
      body: [body, apiCityUpdateCityRequestSchema],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    return req.callAsJson(unknown(), requestOptions);
  }

  /**
   * @param body
   * @return Response from the API call
   */
  async apiCityDeleteCity(
    body: ApiCityDeleteCityRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest('POST', '/City/DeleteCity');
    const mapped = req.prepareArgs({
      body: [body, apiCityDeleteCityRequestSchema],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    req.authenticate(false);
    return req.callAsJson(unknown(), requestOptions);
  }
}
