/**
 * API_NEGOSUD.yamlLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import {
  ApiUserAddUserRequest,
  apiUserAddUserRequestSchema,
} from '../models/apiUserAddUserRequest';
import {
  ApiUserDeleteUserRequest,
  apiUserDeleteUserRequestSchema,
} from '../models/apiUserDeleteUserRequest';
import {
  ApiUserUpdateUserRequest,
  apiUserUpdateUserRequestSchema,
} from '../models/apiUserUpdateUserRequest';
import { unknown } from '../schema';
import { BaseController } from './baseController';

export class UserController extends BaseController {
  /**
   * @return Response from the API call
   */
  async apiUserId(
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest('GET', '/User/3691');
    return req.callAsJson(unknown(), requestOptions);
  }

  /**
   * @return Response from the API call
   */
  async apiUser(
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest('GET', '/User');
    return req.callAsJson(unknown(), requestOptions);
  }

  /**
   * @param body
   * @return Response from the API call
   */
  async apiUserAddUser(
    body: ApiUserAddUserRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest('POST', '/User/AddUser');
    const mapped = req.prepareArgs({
      body: [body, apiUserAddUserRequestSchema],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    return req.callAsJson(unknown(), requestOptions);
  }

  /**
   * @param body
   * @return Response from the API call
   */
  async apiUserUpdateUser(
    body: ApiUserUpdateUserRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest('POST', '/User/UpdateUser');
    const mapped = req.prepareArgs({
      body: [body, apiUserUpdateUserRequestSchema],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    return req.callAsJson(unknown(), requestOptions);
  }

  /**
   * @param body
   * @return Response from the API call
   */
  async apiUserDeleteUser(
    body: ApiUserDeleteUserRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest('POST', '/User/DeleteUser');
    const mapped = req.prepareArgs({
      body: [body, apiUserDeleteUserRequestSchema],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    return req.callAsJson(unknown(), requestOptions);
  }
}
