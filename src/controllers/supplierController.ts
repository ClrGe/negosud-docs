/**
 * API_NEGOSUD.yamlLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import {
  ApiSupplierAddSupplierRequest,
  apiSupplierAddSupplierRequestSchema,
} from '../models/apiSupplierAddSupplierRequest';
import {
  ApiSupplierDeleteSupplierRequest,
  apiSupplierDeleteSupplierRequestSchema,
} from '../models/apiSupplierDeleteSupplierRequest';
import {
  ApiSupplierUpdateSupplierRequest,
  apiSupplierUpdateSupplierRequestSchema,
} from '../models/apiSupplierUpdateSupplierRequest';
import { unknown } from '../schema';
import { BaseController } from './baseController';

export class SupplierController extends BaseController {
  /**
   * @return Response from the API call
   */
  async apiSupplier(
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest('GET', '/Supplier');
    return req.callAsJson(unknown(), requestOptions);
  }

  /**
   * @return Response from the API call
   */
  async apiSupplierId(
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest('GET', '/Supplier/3691');
    return req.callAsJson(unknown(), requestOptions);
  }

  /**
   * @param body
   * @return Response from the API call
   */
  async apiSupplierAddSupplier(
    body: ApiSupplierAddSupplierRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest('POST', '/Supplier/AddSupplier');
    const mapped = req.prepareArgs({
      body: [body, apiSupplierAddSupplierRequestSchema],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    return req.callAsJson(unknown(), requestOptions);
  }

  /**
   * @param body
   * @return Response from the API call
   */
  async apiSupplierUpdateSupplier(
    body: ApiSupplierUpdateSupplierRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest('POST', '/Supplier/UpdateSupplier/2');
    const mapped = req.prepareArgs({
      body: [body, apiSupplierUpdateSupplierRequestSchema],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    return req.callAsJson(unknown(), requestOptions);
  }

  /**
   * @param body
   * @return Response from the API call
   */
  async apiSupplierDeleteSupplier(
    body: ApiSupplierDeleteSupplierRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest('POST', '/Supplier/DeleteSupplier');
    const mapped = req.prepareArgs({
      body: [body, apiSupplierDeleteSupplierRequestSchema],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    return req.callAsJson(unknown(), requestOptions);
  }
}
